[{"content":"はじめに この記事では、GitHub Actionsを使ってSuper-Linterによる静的解析を行う方法について説明します。Super-Linterは、さまざまな言語やフォーマットに対応した静的解析ツールをまとめたもので、GitHubが提供しています。手軽にコードの品質やスタイルを維持し続けることができるのでおすすめです。\n料金 Super-Linterは無料で利用できますが、GitHub Actionsの実行時間には制限があります。プライベートリポジトリでは、無料プランの場合、月に2000分の実行時間が付与されます。パブリックリポジトリの場合、無料で無制限の実行時間が利用できます。\n前提条件 GitHubアカウントを持っていること Gitリポジトリが作成済みであること 手順 1. GitHubリポジトリにアクセス 対象のGitHubリポジトリにアクセスし、ページ上部のタブから「Actions」をクリックします。\n2. 「Search workflows」を使ってSuper-Linterを検索 「Actions」ページ内の「Search workflows」検索ボックスに「Super-Linter」と入力して検索します。検索結果に「Super-Linter」が表示されるので、「configure」クリックします。\n3. ワークフロー設定ファイルをコミット .github/workflows/super_linter.ymlファイルが作成され、以下のような内容が記載されていると思います。ワークフローの内容を必要があれば修正し、コミットします。\n# This workflow executes several linters on changed files based on languages used in your code base whenever # you push a code or open a pull request. # # You can adjust the behavior by modifying this file. # For more information, see: # https://github.com/github/super-linter name: Lint Code Base on: push: branches: [ \u0026quot;main\u0026quot; ] pull_request: branches: [ \u0026quot;main\u0026quot; ] jobs: run-lint: runs-on: ubuntu-latest steps: - name: Checkout code uses: actions/checkout@v3 with: # Full git history is needed to get a proper list of changed files within `super-linter` fetch-depth: 0 - name: Lint Code Base uses: github/super-linter@v4 env: VALIDATE_ALL_CODEBASE: false DEFAULT_BRANCH: \u0026quot;main\u0026quot; GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} この設定ファイルでは、mainブランチへのpushやプルリクエスト時にSuper-Linterが実行されるように設定されています。また、ubuntu-latestを実行環境として指定しています。\n5. ワークフローの実行確認 GitHubリポジトリのページにアクセスし、「Actions」タブをクリックして、Super-Linterが実行されていることを確認してください。mainブランチへのpushやプルリクエストが行われると、Super-Linterが自動的に実行されるようになります。ワークフローが正常に実行されたかどうかは、「Actions」タブ内で確認できます。\n6. 結果の確認 ワークフロー実行後、Super-Linterによる静的解析の結果が表示されます。エラーや警告がある場合は、詳細をクリックして確認し、問題のあるコードを修正してください。修正後、再度プッシュするとSuper-Linterが再度実行され、問題が解消されたかどうかを確認できます。\n7. オプション設定 必要に応じて、Super-Linterの設定をカスタマイズできます。例えば、特定の言語のルールを無効にしたり、カスタムルールを追加したりすることができます。詳細はSuper-Linterの公式ドキュメントを参照してください。\nまとめ Dockerイメージのサイズがかなり大きいため、実行開始までに2~3分くらいかかるのがデメリットかなと思います。ですが簡単に静的解析を自動で実行できる環境を作れるのは素晴らしいと思いました！\n","date":"2023-04-19T01:35:25+09:00","permalink":"https://maropiyo.com/post/how-to-use-super-linter-with-github-actions/","title":"【Github Actions】GitHub ActionsとSuper-Linterで手軽にコードの品質を保つ"},{"content":"ブログを開設しました！\n開発の備忘録や日常での出来事について、不定期に投稿していこうと思います！\n","date":"2023-02-12T04:43:39+09:00","permalink":"https://maropiyo.com/post/first-post/","title":"初めての投稿"}]